package db;

import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;

/**
 * Static class holding connection to database during application life circle
 *
 * author: ducnh
 * create: 15-04-2017
 */
public abstract class db {
    private static Connection con = null;
    private static Statement stm = null;
    private static ResultSet rs = null;
    
    /**
     * Prepare connection: call at beginning of program
     * @param ORACLE_SID
     * @param username
     * @param password
     */
    public static void init (String ORACLE_SID, String username, String password) {
        try {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            db.con = DriverManager.getConnection(
                        "jdbc:oracle:thin:@localhost:1521:" + ORACLE_SID,
                        username, password
                    );
            db.stm = db.con.createStatement();
        } catch (Exception e) {
            System.err.println("---- Prepare connection failure !");
            e.printStackTrace();
        } finally {
            if (db.con != null && db.stm != null) {
                System.out.println("---- Connection ready to use <");
            }
        }
    }
    /**
     * Destroy connection
     */
    public static void destroy () {
        try {
            if (db.rs != null) {
                db.rs.close();
            }
            if (db.stm != null) {
                db.stm.close();
            }
            if (db.con != null) {
                db.con.close();
            }
        } catch (Exception e) {
            System.out.println("---- Something went wrong -> close connection failure");
            e.printStackTrace();
        }
    }
    /**
     * Send query to database: use for select command only
     * @param sqlcmd
     * @return
     */
    public static ResultSet sendForResult (String sqlcmd) {
        if (db.stm == null){
            System.err.println("---- ERROR: Connection is missing! Please initial connection before use it");
            return null;
        }
        try {
            db.rs = db.stm.executeQuery(sqlcmd);
        } catch (Exception e) {
            System.err.println("---- ERROR: Execute query failure !");
            e.printStackTrace();
        }
        return db.rs;
    }
    
    /**
     * Send query to database: use for insert, delete, update command
     * @param sqlcmd
     */
    public static boolean send (String sqlcmd) {
        if (db.stm == null){
            System.err.println("---- ERROR: Connection is missing! Please initial connection before use it");
            return false;
        }
        boolean rs = true;
        try {
            db.rs = db.stm.executeQuery(sqlcmd);
        } catch (Exception e) {
            System.err.println("---- ERROR: Execute query failure !");
            e.printStackTrace();
            rs = false;
        }
        return rs;
    }

    /**
     * Call PL/SQL generated by Entity class
     * to insert record
     * @param cmd
     */
    public static void saveAutoId(String cmd) {
        try {
            CallableStatement callStm = db.con.prepareCall(cmd);
            callStm.execute();
        } catch(Exception e) {
            System.out.println("---- Call failure !");
            e.printStackTrace();
        }
    }
}
